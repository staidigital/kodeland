// section1.js

export default [


  // üîπ LET
  {
    id: "sectionOne",
    title: "",
    blocks: [
      {
        type:'paragraph',
        text:'G√• inn i `main.js`-filen din og endre koden slik at det st√•r:'
      },
          {
        type: 'code',
        language: 'javascript',
        interactive: false,
        code: `let melding = "Hello World!";
console.log(melding);`
      },
      {
        type:'paragraph',
        text:'I konsollen skal du n√• f√• samme melding som n√•r du skrev `console.log("Hello World!")` tidligere. Det er fordi meldingen skrevet i koden ovenfor er en ^^variabel^^.'
      },
      {
        type:'paragraph',
        text:'En variabel er rett og slett et navn som du gir en verdi, slik at du kan bruke verdien senere. Du kan tenke p√• en variabel som en etikett du fester p√• en bestemt verdi, slik at du kan henvise til verdien ved √• bruke etiketten. '
      },
        {
        type:'paragraph',
        text:'For √• deklarere en variabel skriver du kodeordet `let` og deretter variabelnavnet.'
      },
      {
        type:'paragraph',
        text:'Den f√∏rste linjen sier til JavaScript at `melding` skal assosieres med verdien `Hello World!`'
      },

      {
        type: 'code',
        language: 'javascript',
        interactive: false,
        code: `let melding = "Hello World!"`
      },
       {
        type:'paragraph',
        text:'Den andre linjen gir JavaScript instruksjonen √• skrive ut verdien til `melding` og det er akkurat det den gj√∏r.'
      },
      {
        type:'paragraph',
        text:'Du kan endre p√• verdien til variabelen ved √• ^^re-assigne^^ en annen verdien p√• denne m√•ten:'
      },
      {
        type: 'code',
        language: 'javascript',
        interactive: false,
        code: `melding = "Hello World!"
console.log(melding)
melding = "Fint v√¶r"
console.log(melding)`
      },
       {
        type:'paragraph',
        text:'Variabler brukes til √• referere til data slik at du kan bruke samme data flere ganger i programmet ditt.'
      }
    ]
  },

  // NAVNGIVNING
  {
    id: "sectionFour",
    title: "Navn til variabler",
    blocks: [
      {
        type:'paragraph',
        text: 'JavaScript har noen navn-regler du m√• kunne for √• unng√• navngivnings-feil.'
      },
      {
        type:'paragraph',
        text: 'Variabler kan bare inneholde alfabet-bokstaver, tall og understreker. S√• du kan gi navnene `melding`, `melding_1` og `melding_2`'
      },
      {
        type:'paragraph',
        text: 'F√∏rste tegnet i variabelnavnet kan ikke v√¶re et tall. `melding_1` fungerer, `1_melding` fungerer ikke.`'
      },
      {
        type:'paragraph',
        text: 'Du kan ikke bruke reserverte kodeord, slik som `console` fordi de brukes av JavaScript til √• gj√∏re visse ting. Det fins mange slike kodeord, slik som `if`, `for` og `while` som du skal l√¶re senere.'
      },
      {
        type:'paragraph',
        text: 'Variabelnavn er ^^case-sensitive^^ som betyr at `Message`, `MESSAGE` og `message` kan bli brukt til tre forskjellige variabler. Men det s√• klart lurt √• unng√• like navn siden det kan forvirre.'
      },
      {
        type:'paragraph',
        text: 'Noen ganger trenger du mer enn et ord for √• deklarere et variabelnavn. Det fins to navn-konvensjoner man kan f√∏lge: '
      },
      {
        type:"list",
        items: [
          '`camelCase`',
          '`snake_case`',
        ]
      },
         {
        type:'paragraph',
        text: 'Camel case bruker en stor bokstav for f√∏rste bokstav for etterf√∏lgende ord. For eksempel'
      },
      {
        type:'code',
        language:'javascript',
        interactive: false,
        code: `let myAwesomeVariable`
      },
      {
        type:'paragraph',
        text: 'Snake case bruker en understrek til √• separere ordene'
      },
      {
        type:'code',
        language:'javascript',
        interactive: false,
        code: `let my_awesome_variable`
      },
       {
        type:'paragraph',
        text: 'Begge fungerer, men husk √• hold deg til kun √©n av dem for √• ikke forvirre.'
      },
    ]
  },
  // üîπ CONST
  {
    id: "sectionThree",
    title: "Konstante variabler",
    blocks: [
      {
        type:'paragraph',
        text: 'Noen ganger m√• man lagre verdier som ikke skal endres i variabler.'
      },
      {
        type:'paragraph',
        text: 'En konstant variabel er en variabel som ikke endrer sin verdi s√• lenge koden kj√∏rer. Vi bruker `const`-kodeordet for √• lage en konstant variabel. F√∏lgende viser hvordan lage to konstanter i JavaScript:'
      },

      {
        type:'code',
        language:'javascript',
        interactive: false,
        code: `const FILE_SIZE_LIMIT = 2000
const MAX_SPEED = 300`
      },
       {
        type:'paragraph',
        text: 'Som du ser bruker vi bare store bokstaver n√•r vi gir navn til en konstant. Det er for √• gj√∏re konstanter mer tydelige i koden.'
      },
    ]
  },

  // üîπ Oppsummering
  {
    id: "Oppsummering",
    title: "Enkelt sagt",
    blocks: [
      {
        type:'list',
        items: [
          'Generelt er det lurt √• bruke `const` fra starten. N√•r du finner ut at du m√• endre koden bruk `let`.',
          'Bruk `let` n√•r du vet at verdien skal endres.',
          'F√∏lge navngivningskonvensjonene for variabler. Bruk gode variabelnavn! ',
        ]
      }
    ]
  },
  // üìù TASKS
{
  id: "sectionTasks",
  title: 'Programmeringsoppgaver ‚Äì gj√∏r dem i Visual Studio Code!',
  blocks: [
    {
      type: 'paragraph',
      text: 'Usikker p√• hvordan du helst b√∏r skrive og lagre din egen javascript kode? Trykk p√• [denne lenken](/javascript/part0/) for √• se hvordan knytte en `js`-fil til en `HTML`-fil.'
    },
    // Oppgavene
    {
      type: 'task',
      number: 1,
      title: "Enkel variabelbruk",
      description: "Skriv et program som definerer tre variabler: `firstName`, `lastName` og `age`. Gi dem verdier og skriv dem ut i konsollen."
    },
    {
      type: 'task',
      number: 2,
      title: "Endre variabler",
      description: "Lag en variabel `favoriteColor` med `let`. Gi den en verdi og skriv den ut. Endre s√• verdien av variabelen og skriv ut den nye verdien."
    },
    {
      type: 'task',
      number: 3,
      title: "Bruk av const",
      description: "Definer en konstant `PI` med verdien `3.14`. Pr√∏v √• endre verdien (spoiler: det vil ikke fungere!). Hva skjer?"
    },

    {
      type: 'task',
      number: 4,
      title: "Gj√∏r enkel matte med variabler",
      description: "Lag to variabler, `num1` og `num2`, og gj√∏r noen enkle berekninger med dem. Skriv ut summen, differansen, produktet og kvotienten i konsollen."
    },
    {
      type: 'paragraph',
      text: 'Variabler er en megaviktig del av programmering! Vi skal snart se hvordan bruke det i programmering, men f√∏rst m√• vi l√¶re om datatyper !'
    }
  ]
}

];
